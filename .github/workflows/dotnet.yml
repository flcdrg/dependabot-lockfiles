name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: View context attributes
      uses: actions/github-script@v4
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          console.log(context);

          let ref = context.sha;
          console.log('context.sha: ' + ref);
          if (context.eventName === 'pull_request') {
            ref = context.payload.pull_request.head.sha
            console.log('context.payload.pull_request.head.sha: ' + ref);
            if (!ref) {
              ref = context.payload.after
              console.log('context.payload.after: ' + ref);
            }
          }

          const result = await github.checks.create({
            name: 'Thingy',
            head_sha: ref,
            owner: context.repo.owner,
            repo: context.repo.repo,
            status: 'completed',
            conclusion: 'success',
            output: {
              title: 'title',
              summary: 'A summary: ' + new Date().toISOString(),
              text: `ref: ${ref}\ngithub.event.pull_request.head.sha: ${{ github.event.pull_request.head.sha }}\context.payload.after: n${context.payload.after}`
            }
          });

          console.log(result);
          
          /* await github.checks.create({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      name: "Installation Token Integration Test",
                      head_sha: "${{ github.event.pull_request.head.sha }}",
                      status: "completed",
                      conclusion: "success"
                    });
          */


        
    # - name: Dump GitHub context
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   run: echo "$GITHUB_CONTEXT"

    # - uses: actions/checkout@v2
    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v1
    #   with:
    #     dotnet-version: 5.0.x
    # - name: Restore dependencies
    #   run: dotnet restore --locked-mode
    # - name: Build
    #   run: dotnet build --no-restore
